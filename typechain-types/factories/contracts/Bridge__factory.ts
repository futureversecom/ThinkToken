/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Bridge, BridgeInterface } from "../../contracts/Bridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "BridgeActiveUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bridgeFee",
        type: "uint256",
      },
    ],
    name: "BridgeFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Endowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "EtherWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "validatorSetDigest",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "validatorSetId",
        type: "uint32",
      },
    ],
    name: "ForceSetActiveValidators",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "validatorSetDigest",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "validatorSetId",
        type: "uint32",
      },
    ],
    name: "ForceSetHistoricValidators",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maxMessageLength",
        type: "uint256",
      },
    ],
    name: "MaxMessageLengthUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "maxRewardPayout",
        type: "uint256",
      },
    ],
    name: "MaxRewardPayoutUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "destinate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "palletAddress",
        type: "address",
      },
    ],
    name: "PalletAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proofTTL",
        type: "uint256",
      },
    ],
    name: "ProofTTLUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "SendMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "sendMessageFee",
        type: "uint256",
      },
    ],
    name: "SendMessageFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_newId",
        type: "uint256",
      },
    ],
    name: "SentEventIdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "validatorSetDigest",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "validatorSetId",
        type: "uint32",
      },
    ],
    name: "SetValidators",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "thresholdPercent",
        type: "uint256",
      },
    ],
    name: "ThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawnMessageFees",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedMessageFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeValidatorSetId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "newValidators",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "newValidatorSetId",
        type: "uint32",
      },
    ],
    name: "forceActiveValidatorSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validators",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "validatorSetId",
        type: "uint32",
      },
    ],
    name: "forceHistoricValidatorSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMessageLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRewardPayout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onMessageReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "palletAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofTTL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "appMessage",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validatorSetId",
            type: "uint32",
          },
          {
            internalType: "uint8[]",
            name: "v",
            type: "uint8[]",
          },
          {
            internalType: "bytes32[]",
            name: "r",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "s",
            type: "bytes32[]",
          },
          {
            internalType: "address[]",
            name: "validators",
            type: "address[]",
          },
        ],
        internalType: "struct EventProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "sendMessageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sentEventId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_bridgeFee",
        type: "uint256",
      },
    ],
    name: "setBridgeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMessageLength",
        type: "uint256",
      },
    ],
    name: "setMaxMessageLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxRewardPayout",
        type: "uint256",
      },
    ],
    name: "setMaxRewardPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_palletAddress",
        type: "address",
      },
    ],
    name: "setPalletAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proofTTL",
        type: "uint256",
      },
    ],
    name: "setProofTTL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setSendMessageFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newId",
        type: "uint256",
      },
    ],
    name: "setSentEventId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_thresholdPercent",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "thresholdPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validatorSetDigests",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "verifiedEventIds",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawMsgFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052660e35fa931a0000600655603c60079081556008556009805460ff19169055670de0b6b3a7640000600a55600b80546001600160a01b031916736d6f646c65746879627264670000000000000000179055610400600c55660110d9316ec000600d5534801561007257600080fd5b5061007c33610085565b600180556100d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6122df806100e46000396000f3fe60806040526004361061020f5760003560e01c8063728952f8116101185780639c11bc30116100a0578063cfc16cea1161006f578063cfc16cea146105b6578063d87500db146105cc578063f0bdb2d1146105fc578063f2fde38b1461061c578063fa09e6301461063c57600080fd5b80639c11bc3014610543578063acec338a14610563578063bb5ddb0f14610583578063c6c0f59e1461059657600080fd5b806387b50acb116100e757806387b50acb1461048e5780638da5cb5b146104a4578063960bfe04146104d6578063996b2f94146104f6578063998cdf831461052357600080fd5b8063728952f8146104255780637755618b14610445578063823d2fc81461046557806382b12dd71461047857600080fd5b80633ab578aa1161019b5780635f7e93991161016a5780635f7e93991461038857806361ab5a78146103ba578063650bd364146103da5780636a70fef2146103fa578063715018a61461041057600080fd5b80633ab578aa1461031d5780634008b03f146103335780634acf77211461035357806350dcb0271461037357600080fd5b80631d1d4e29116101e25780631d1d4e291461029157806323aa2a9d146102a75780632c05f9a2146102c75780632ee111ed146102dd5780633301a464146102fd57600080fd5b806301ffc9a71461021457806302fb0c5e1461024957806306e30dfc146102635780631a90a2191461026d575b600080fd5b34801561022057600080fd5b5061023461022f366004611be4565b61065c565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b506009546102349060ff1681565b61026b6106ae565b005b34801561027957600080fd5b50610283600f5481565b604051908152602001610240565b34801561029d57600080fd5b50610283600c5481565b3480156102b357600080fd5b5061026b6102c2366004611c0e565b600f55565b3480156102d357600080fd5b50610283600a5481565b3480156102e957600080fd5b5061026b6102f8366004611c4c565b610730565b34801561030957600080fd5b5061026b610318366004611c0e565b610782565b34801561032957600080fd5b5061028360085481565b34801561033f57600080fd5b5061026b61034e366004611c7d565b6107bd565b34801561035f57600080fd5b5061026b61036e366004611c7d565b6108bd565b34801561037f57600080fd5b50600f54610283565b34801561039457600080fd5b506003546103a59063ffffffff1681565b60405163ffffffff9091168152602001610240565b3480156103c657600080fd5b5061026b6103d5366004611c0e565b6109c0565b3480156103e657600080fd5b5061026b6103f5366004611d4a565b6109fb565b34801561040657600080fd5b50610283600e5481565b34801561041c57600080fd5b5061026b610acb565b34801561043157600080fd5b5061026b610440366004611c0e565b610adf565b34801561045157600080fd5b5061026b610460366004611c0e565b610b1a565b61026b610473366004611d9f565b610b55565b34801561048457600080fd5b5061028360065481565b34801561049a57600080fd5b5061028360045481565b3480156104b057600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610240565b3480156104e257600080fd5b5061026b6104f1366004611c0e565b610d03565b34801561050257600080fd5b50610283610511366004611c0e565b60026020526000908152604090205481565b34801561052f57600080fd5b5061026b61053e366004611c0e565b610d8f565b34801561054f57600080fd5b5061026b61055e366004611c0e565b610dca565b34801561056f57600080fd5b5061026b61057e366004611e35565b610e05565b61026b610591366004611d4a565b610e4a565b3480156105a257600080fd5b50600b546104be906001600160a01b031681565b3480156105c257600080fd5b5061028360075481565b3480156105d857600080fd5b506102346105e7366004611c0e565b60056020526000908152604090205460ff1681565b34801561060857600080fd5b5061026b610617366004611e57565b610faa565b34801561062857600080fd5b5061026b610637366004611c4c565b6110a5565b34801561064857600080fd5b5061026b610657366004611c4c565b61111e565b60006001600160e01b0319821663034de22760e51b148061068d57506001600160e01b03198216631942f4d960e21b145b806106a857506301ffc9a760e01b6001600160e01b03198316145b92915050565b600034116107035760405162461bcd60e51b815260206004820152601a60248201527f4272696467653a206d75737420656e646f77206e6f6e7a65726f00000000000060448201526064015b60405180910390fd5b60405134907f840be946bba3df0d184eb7e6cd7c9e57bb380cf6078516c7441db5709d58509890600090a2565b610738611208565b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f679cb5acfebd038830b61daadd5f2f74e2114862b1c289a5d2db82bc6eda32a690600090a250565b61078a611208565b600a81905560405181907f11cff79cc5c082b5f775ae922a2a6dc80e9f79b9207767278bdf7391db5467f790600090a250565b6107c5611208565b816107e25760405162461bcd60e51b81526004016106fa90611e83565b60035460085463ffffffff918216916107fd91908416611ed0565b1161084a5760405162461bcd60e51b815260206004820152601760248201527f4272696467653a2073657420697320696e61637469766500000000000000000060448201526064016106fa565b6000838360405160200161085f929190611ee3565b60408051601f19818403018152828252805160209182012063ffffffff8616600081815260029093529282208190559350909183917ff541dede932a20dba17286430555d7aa784b74222f2a34f107d40822f41992e391a350505050565b6108c5611208565b816108e25760405162461bcd60e51b81526004016106fa90611e83565b60035463ffffffff908116908216101561093e5760405162461bcd60e51b815260206004820152601760248201527f4272696467653a2073657420697320686973746f72696300000000000000000060448201526064016106fa565b60008383604051602001610953929190611ee3565b60408051601f19818403018152828252805160209182012063ffffffff8616600081815260029093529282208190556003805463ffffffff1916841790559350909183917f36885d9a49d239da5379a6f8f9bb89273332a7e312cb5b8a2d3b0f567e8209f491a350505050565b6109c8611208565b600481905560405181907f06055c66c43187163b022b7d954ff32b4ba5265e175458d1b134cfe8ab72f41290600090a250565b333014610a4a5760405162461bcd60e51b815260206004820152601c60248201527f4272696467653a206f6e6c79206272696467652063616e2063616c6c0000000060448201526064016106fa565b600b546001600160a01b03848116911614610aa75760405162461bcd60e51b815260206004820152601d60248201527f4272696467653a20736f75726365206d7573742062652070616c6c657400000060448201526064016106fa565b600080610ab683850185611f47565b91509150610ac48282611262565b5050505050565b610ad3611208565b610add600061143f565b565b610ae7611208565b600d81905560405181907fabd57ef278738881488128581f298faa35ba1bae2bbec9fb6e370ff60d531e4b90600090a250565b610b22611208565b600881905560405181907f01116a77fa86522c55d40463f1b48825870a5d04ea15ca52a166d8ace7f355ff90600090a250565b60065434101580610b6e57506001600160a01b03841630145b610bba5760405162461bcd60e51b815260206004820152601e60248201527f4272696467653a206d75737420737570706c792062726964676520666565000060448201526064016106fa565b81610bff5760405162461bcd60e51b81526020600482015260156024820152744272696467653a20656d707479206d65737361676560581b60448201526064016106fa565b600085858585610c15604087016020880161201e565b604051610c2c959493929190883590602001612062565b6040516020818303038152906040529050610c47818361148f565b846001600160a01b0316866001600160a01b031683600001357f3591658888eebc109961f7116a3e6aafbbeb08b55e727cf69c44d466a77a90d18787604051610c919291906120aa565b60405180910390a4604051631942f4d960e21b81526001600160a01b0386169063650bd36490610cc9908990889088906004016120c6565b600060405180830381600087803b158015610ce357600080fd5b505af1158015610cf7573d6000803e3d6000fd5b50505050505050505050565b610d0b611208565b6064811115610d5c5760405162461bcd60e51b815260206004820152601e60248201527f4272696467653a2070657263656e74206d757374206265203c3d20313030000060448201526064016106fa565b600781905560405181907fadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe17190600090a250565b610d97611208565b600681905560405181907f42dfb00d085d601e55327921154ae76c1b24270b026c5a0c51caee18eb4c401f90600090a250565b610dd2611208565b600c81905560405181907f80e9dc023eeed9cbe4e886f225681c4fa94a046011c6269619c21befd6c4518190600090a250565b610e0d611208565b6009805460ff19168215159081179091556040517fd06b0db8a7172c6c142c15cd90b6efb883b600b978dfca380621aa4c9f6d881590600090a250565b60095460ff16610e965760405162461bcd60e51b81526020600482015260176024820152764272696467653a2062726964676520696e61637469766560481b60448201526064016106fa565b600c54811115610ee85760405162461bcd60e51b815260206004820152601e60248201527f4272696467653a206d73672065786365656473206d6178206c656e677468000060448201526064016106fa565b600d54341015610f3a5760405162461bcd60e51b815260206004820181905260248201527f4272696467653a20696e73756666696369656e74206d6573736167652066656560448201526064016106fa565b34600e6000828254610f4c9190611ed0565b9091555050600480547ff2a50cd57a795ad452a0b8586bcd3fe8e3ee00054c01c4712655d7753539dd35916000610f82836120f4565b919050553385858534604051610f9d9695949392919061210d565b60405180910390a1505050565b610fb2611208565b80600e6000828254610fc49190612153565b90915550506040516000906001600160a01b0384169083908381818185875af1925050503d8060008114611014576040519150601f19603f3d011682016040523d82523d6000602084013e611019565b606091505b505090508061106a5760405162461bcd60e51b815260206004820152601f60248201527f4272696467653a204661696c656420746f2073656e64206d736720666565730060448201526064016106fa565b60405182906001600160a01b038516907fcc89aff20f6022ea39ee28e42ebe0013f5e8a32d9388b49d2f6fe08563a54cdf90600090a3505050565b6110ad611208565b6001600160a01b0381166111125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fa565b61111b8161143f565b50565b611126611208565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114611173576040519150601f19603f3d011682016040523d82523d6000602084013e611178565b606091505b50509050806111c95760405162461bcd60e51b815260206004820152601c60248201527f4272696467653a206661696c656420746f2073656e642045746865720000000060448201526064016106fa565b604080516001600160a01b0385168152602081018490527f06097061aeda806b5e9cb4133d9899f332ff0913956567fc0f7ea15e3d19947c9101610f9d565b6000546001600160a01b03163314610add5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fa565b61126a61193d565b600082511161128b5760405162461bcd60e51b81526004016106fa90611e83565b60035463ffffffff908116908216116112f05760405162461bcd60e51b815260206004820152602160248201527f4272696467653a2076616c696461746f7220736574206964207265706c6179656044820152601960fa1b60648201526084016106fa565b6000826040516020016113039190612166565b60408051601f19818403018152918152815160209283012063ffffffff8516600081815260029094529183208190556003805463ffffffff1916909217909155600e5490925061135f906113579047612153565b600a54611996565b604051909150600090329083908381818185875af1925050503d80600081146113a4576040519150601f19603f3d011682016040523d82523d6000602084013e6113a9565b606091505b50509050806113fa5760405162461bcd60e51b815260206004820152601d60248201527f4272696467653a204661696c656420746f2073656e642072657761726400000060448201526064016106fa565b8363ffffffff1682847f3dab4e75c61b76a4152c289f3c93392ddab6386b2423ffab2cee4da9fbb05c7160405160405180910390a450505061143b60018055565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560006114a3604084016020850161201e565b905060006114b460a08501856121b3565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506009549293505060ff90911690506115375760405162461bcd60e51b81526020600482015260176024820152764272696467653a2062726964676520696e61637469766560481b60448201526064016106fa565b60008381526005602052604090205460ff16156115965760405162461bcd60e51b815260206004820152601860248201527f4272696467653a206576656e744964207265706c61796564000000000000000060448201526064016106fa565b60035463ffffffff90811690831611156115f25760405162461bcd60e51b815260206004820152601c60248201527f4272696467653a206675747572652076616c696461746f72207365740000000060448201526064016106fa565b60085460035461160990849063ffffffff166121fd565b63ffffffff1611156116555760405162461bcd60e51b8152602060048201526015602482015274213934b233b29d1032bc3834b932b210383937b7b360591b60448201526064016106fa565b60008151116116a65760405162461bcd60e51b815260206004820152601d60248201527f4272696467653a20696e76616c69642076616c696461746f722073657400000060448201526064016106fa565b600260008363ffffffff16815260200190815260200160002054816040516020016116d19190612166565b60405160208183030381529060405280519060200120146117405760405162461bcd60e51b815260206004820152602360248201527f4272696467653a20756e65787065637465642076616c696461746f7220646967604482015262195cdd60ea1b60648201526084016106fa565b84516020860120600754825160009160649161175c9190612221565b6117669190612238565b905060008060005b85518110156118c9578161178560608b018b6121b3565b838181106117955761179561225a565b90506020020135146118c1576118326117b160408b018b6121b3565b838181106117c1576117c161225a565b90506020020160208101906117d69190612270565b6117e360608c018c6121b3565b848181106117f3576117f361225a565b905060200201358b806080019061180a91906121b3565b8581811061181a5761181a61225a565b90506020020135886119ae909392919063ffffffff16565b6001600160a01b031686828151811061184d5761184d61225a565b60200260200101516001600160a01b0316146118ab5760405162461bcd60e51b815260206004820152601960248201527f4272696467653a207369676e617475726520696e76616c69640000000000000060448201526064016106fa565b6118b6600184611ed0565b9250838310156118c9575b60010161176e565b508282101561191a5760405162461bcd60e51b815260206004820152601d60248201527f4272696467653a206e6f7420656e6f756768207369676e61747572657300000060448201526064016106fa565b5050506000938452505060056020525060409020805460ff191660011790555050565b60026001540361198f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106fa565b6002600155565b60008183106119a557816119a7565b825b9392505050565b60008060006119bf878787876119d6565b915091506119cc81611a9a565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a0d5750600090506003611a91565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a61573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a8a57600060019250925050611a91565b9150600090505b94509492505050565b6000816004811115611aae57611aae612293565b03611ab65750565b6001816004811115611aca57611aca612293565b03611b175760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106fa565b6002816004811115611b2b57611b2b612293565b03611b785760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106fa565b6003816004811115611b8c57611b8c612293565b0361111b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106fa565b600060208284031215611bf657600080fd5b81356001600160e01b0319811681146119a757600080fd5b600060208284031215611c2057600080fd5b5035919050565b6001600160a01b038116811461111b57600080fd5b8035611c4781611c27565b919050565b600060208284031215611c5e57600080fd5b81356119a781611c27565b803563ffffffff81168114611c4757600080fd5b600080600060408486031215611c9257600080fd5b833567ffffffffffffffff80821115611caa57600080fd5b818601915086601f830112611cbe57600080fd5b813581811115611ccd57600080fd5b8760208260051b8501011115611ce257600080fd5b602092830195509350611cf89186019050611c69565b90509250925092565b60008083601f840112611d1357600080fd5b50813567ffffffffffffffff811115611d2b57600080fd5b602083019150836020828501011115611d4357600080fd5b9250929050565b600080600060408486031215611d5f57600080fd5b8335611d6a81611c27565b9250602084013567ffffffffffffffff811115611d8657600080fd5b611d9286828701611d01565b9497909650939450505050565b600080600080600060808688031215611db757600080fd5b8535611dc281611c27565b94506020860135611dd281611c27565b9350604086013567ffffffffffffffff80821115611def57600080fd5b611dfb89838a01611d01565b90955093506060880135915080821115611e1457600080fd5b50860160c08189031215611e2757600080fd5b809150509295509295909350565b600060208284031215611e4757600080fd5b813580151581146119a757600080fd5b60008060408385031215611e6a57600080fd5b8235611e7581611c27565b946020939093013593505050565b6020808252601b908201527f4272696467653a20656d7074792076616c696461746f72207365740000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156106a8576106a8611eba565b60208082528181018390526000908460408401835b86811015611f26578235611f0b81611c27565b6001600160a01b031682529183019190830190600101611ef8565b509695505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611f5a57600080fd5b823567ffffffffffffffff80821115611f7257600080fd5b818501915085601f830112611f8657600080fd5b8135602082821115611f9a57611f9a611f31565b8160051b604051601f19603f83011681018181108682111715611fbf57611fbf611f31565b604052928352818301935084810182019289841115611fdd57600080fd5b948201945b8386101561200257611ff386611c3c565b85529482019493820193611fe2565b96506120119050878201611c69565b9450505050509250929050565b60006020828403121561203057600080fd5b6119a782611c69565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0387811682528616602082015260a06040820181905260009061208f9083018688612039565b63ffffffff9490941660608301525060800152949350505050565b6020815260006120be602083018486612039565b949350505050565b6001600160a01b03841681526040602082018190526000906120eb9083018486612039565b95945050505050565b60006001820161210657612106611eba565b5060010190565b8681526001600160a01b0386811660208301528516604082015260a0606082018190526000906121409083018587612039565b9050826080830152979650505050505050565b818103818111156106a8576106a8611eba565b6020808252825182820181905260009190848201906040850190845b818110156121a75783516001600160a01b031683529284019291840191600101612182565b50909695505050505050565b6000808335601e198436030181126121ca57600080fd5b83018035915067ffffffffffffffff8211156121e557600080fd5b6020019150600581901b3603821315611d4357600080fd5b63ffffffff82811682821603908082111561221a5761221a611eba565b5092915050565b80820281158282048414176106a8576106a8611eba565b60008261225557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561228257600080fd5b813560ff811681146119a757600080fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122026229a96d7deee474c8d18341677305f06d0a95bc3ced0fe1d29646735d1735764736f6c63430008160033";

type BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bridge__factory extends ContractFactory {
  constructor(...args: BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bridge> {
    return super.deploy(overrides || {}) as Promise<Bridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Bridge {
    return super.attach(address) as Bridge;
  }
  override connect(signer: Signer): Bridge__factory {
    return super.connect(signer) as Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeInterface {
    return new utils.Interface(_abi) as BridgeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bridge {
    return new Contract(address, _abi, signerOrProvider) as Bridge;
  }
}
